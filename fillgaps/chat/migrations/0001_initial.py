# Generated by Django 4.2.6 on 2023-11-02 05:54

from django.db import migrations, models
import django.db.models.deletion


def populate_chat(apps, schema_editor):
    ChatChannel = apps.get_model('chat', 'ChatChannel')
    ChannelAdmin = apps.get_model('chat', 'ChannelAdmin')
    ChannelEmployee = apps.get_model('chat', 'ChannelEmployee')
    ChannelMessage = apps.get_model('chat', 'ChannelMessage')
    Employee = apps.get_model('common', 'Employee')
    ChatChannel.objects.create(channel_name='General', channel_description='General chat', chat_type='PUBLIC')
    ChatChannel.objects.create(channel_name='IT', channel_description='IT chat', chat_type='PUBLIC')
    ChatChannel.objects.create(channel_name='Security', channel_description='Security chat', chat_type='PUBLIC')
    ChatChannel.objects.create(channel_name='Administrative', channel_description='Administrative chat',
                               chat_type='PUBLIC')
    ChatChannel.objects.create(channel_name='Operations', channel_description='Operations chat', chat_type='PUBLIC')
    ChatChannel.objects.create(channel_name='Collection', channel_description='Collection chat', chat_type='PUBLIC')
    ChatChannel.objects.create(channel_name='Research', channel_description='Research chat', chat_type='PUBLIC')
    ChatChannel.objects.create(channel_name='Education', channel_description='Education chat', chat_type='PUBLIC')
    ChatChannel.objects.create(channel_name='Preservation', channel_description='Preservation chat', chat_type='PUBLIC')
    ChatChannel.objects.create(channel_name='External', channel_description='External chat', chat_type='PUBLIC')
    ChannelAdmin.objects.create(channel_id=1, admin_id=1)
    ChannelAdmin.objects.create(channel_id=2, admin_id=Employee.objects.get(role='IT Manager').id)
    ChannelAdmin.objects.create(channel_id=3, admin_id=Employee.objects.get(role='Caretakers Manager').id)
    ChannelAdmin.objects.create(channel_id=4, admin_id=Employee.objects.get(role='Administrative Manager').id)
    ChannelAdmin.objects.create(channel_id=5, admin_id=1)
    ChannelAdmin.objects.create(channel_id=6, admin_id=1)
    ChannelAdmin.objects.create(channel_id=7, admin_id=1)
    ChannelAdmin.objects.create(channel_id=8, admin_id=1)
    ChannelAdmin.objects.create(channel_id=9, admin_id=1)
    ChannelAdmin.objects.create(channel_id=10, admin_id=1)
    ChannelEmployee.objects.create(channel_id=1, employee_id=1)
    ChannelEmployee.objects.create(channel_id=2, employee_id=1)
    ChannelEmployee.objects.create(channel_id=3, employee_id=1)
    ChannelEmployee.objects.create(channel_id=4, employee_id=1)
    ChannelEmployee.objects.create(channel_id=5, employee_id=1)
    ChannelEmployee.objects.create(channel_id=6, employee_id=1)
    ChannelMessage.objects.create(message_content='Welcome to the General chat!', channel_id=1, sender_id=1)
    ChannelMessage.objects.create(message_content='Welcome to the IT chat!', channel_id=2, sender_id=1)
    ChannelMessage.objects.create(message_content='Welcome to the Security chat!', channel_id=3, sender_id=1)
    ChannelMessage.objects.create(message_content='Welcome to the Administrative chat!', channel_id=4, sender_id=1)
    ChannelMessage.objects.create(message_content='Welcome to the Operations chat!', channel_id=5, sender_id=1)
    ChannelMessage.objects.create(message_content='Welcome to the Collection chat!', channel_id=6, sender_id=1)
    ChannelMessage.objects.create(message_content='Welcome to the Research chat!', channel_id=7, sender_id=1)
    ChannelMessage.objects.create(message_content='Welcome to the Education chat!', channel_id=8, sender_id=1)
    ChannelMessage.objects.create(message_content='Welcome to the Preservation chat!', channel_id=9, sender_id=1)
    ChannelMessage.objects.create(message_content='Welcome to the External chat!', channel_id=10, sender_id=1)
    for employee in Employee.objects.all():
        ChannelEmployee.objects.create(channel_id=1, employee_id=employee.id)
    it_employees = Employee.objects.filter(department='IT')
    for it in it_employees:
        ChannelEmployee.objects.create(channel_id=2, employee_id=it.id)
    for security in Employee.objects.filter(department='Security'):
        ChannelEmployee.objects.create(channel_id=3, employee_id=security.id)
    for administrative in Employee.objects.filter(department='Administrative'):
        ChannelEmployee.objects.create(channel_id=4, employee_id=administrative.id)


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('common', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_name', models.CharField(max_length=50, unique=True)),
                ('open_date', models.DateTimeField(auto_now_add=True)),
                ('channel_description', models.CharField(max_length=1000)),
                ('chat_type',
                 models.CharField(choices=[('PUBLIC', 'Public'), ('GROUP', 'Group'), ('PRIVATE', 'Private')],
                                  default='PUBLIC', max_length=30)),
                ('status', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChannelMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_content', models.CharField(max_length=1000)),
                ('send_date', models.DateTimeField(auto_now_add=True)),
                ('drop_date', models.DateTimeField(blank=True, null=True)),
                ('document', models.CharField(blank=True, max_length=1000, null=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='chat.chatchannel')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='common.employee')),
            ],
        ),
        migrations.CreateModel(
            name='ChannelEmployee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='chat.chatchannel')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='common.employee')),
            ],
        ),
        migrations.CreateModel(
            name='ChannelAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='common.employee')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='chat.chatchannel')),
            ],
        ),
        migrations.RunPython(populate_chat),
    ]
